Here are the steps that I followed to get audit logging for login information of users :

[ A ] ==>   Created a war file that tries a jdbc lookup on mysql database.

Which contains below:

1. Add the following inside your “$PROFILE/conf/login-config.xml” file.

=====
<application-policy name="DBAuthTest">
	<authentication>
	<login-module  code="org.jboss.security.auth.spi.DatabaseServerLoginModule" flag="required">
	      <module-option name="dsJndiName">java:/TestDS</module-option>
 	      <module-option name="principalsQuery">select password from  PRINCIPLES where principal_id=?</module-option>
  	      <module-option name="rolesQuery">select user_role, 'Roles' from  ROLES where  principal_id=?</module-option>
	</login-module>

	<login-module code="org.jboss.security.auth.spi.RoleMappingLoginModule" flag="optional">
     <module-option name="rolesProperties">props/test-roles.properties</module-option>
     <module-option name="replaceRole">false</module-option>
      </login-module>
	</authentication>
</application-policy>
======

2. Create a file “$PROFILE/conf/props/test-roles.properties” with the following line:

======
TestUserOneGroup=TestRoleOne
======

3. Now set up the Database by creating and inserting following records in the DB :

======
CREATE TABLE PRINCIPLES ( principal_id VARCHAR(64) primary key,password VARCHAR(64));
CREATE TABLE ROLES ( principal_id VARCHAR(64),user_role VARCHAR(64),role_group VARCHAR(64));

Insert into PRINCIPLES values('TestUserOne','PasswordOne');
Insert into PRINCIPLES values('TestUserTwo','PasswordTwo');

Insert into ROLES values('TestUserOne','TestRoleOne','TestUserOneGroup');
Insert into ROLES values('TestUserTwo','TestRoleTwo','TestUserTwoGroup');

======

4. Now create a DataSource file like “mysql-ds.xml” and then place it inside your “$PROFILE/deploy” directory:

======
<?xml version="1.0" encoding="UTF-8"?>
<datasources>
        <local-tx-datasource>
                <jndi-name>MySqlDSJndi</jndi-name>
                <connection-url>jdbc:mysql://localhost:3306/testAuth</connection-url>
                <driver-class>com.mysql.jdbc.Driver</driver-class>
                <user-name>root</user-name>
                <password>redhat</password>
		<use-java-context>false</use-java-context>
                <metadata>
                       <type-mapping>mySQL</type-mapping>
                </metadata>
        </local-tx-datasource>
</datasources>

======

5. Place the database driver jar inside “$PROFILE/lib” directory.

6. Make sure that your application has the following kind of tags written inside the  WEB-INF/”web.xml” file:

======
<security-constraint>
  <web-resource-collection>
    <web-resource-name>HtmlAdaptor</web-resource-name>
    <url-pattern>/*</url-pattern>
  </web-resource-collection>
  <auth-constraint>
    <role-name>TestRoleOne</role-name>
  </auth-constraint>
</security-constraint>
<login-config>
   <auth-method>BASIC</auth-method>
   <realm-name>TestRealm</realm-name>
</login-config>
<security-role>
    <role-name>TestRoleOne</role-name>
</security-role>
======

7. Make sure that your application has “jboss-web.xml” like following:

======
<!DOCTYPE jboss-web PUBLIC
   "-//JBoss//DTD Web Application 5.0//EN"
   "http://www.jboss.org/j2ee/dtd/jboss-web_5_0.dtd">
<jboss-web>
      <security-domain>java:/jaas/DBAuthTest</security-domain>
</jboss-web>
======

8. Restart your Server and then access the application. You can enter username as “TestUserOne” and password as “PasswordOne”.



NOTE: If you are facing any issue or authentication failure then please enable the following category in your “$PROFILE/conf/jboss-log4j.xml” file to get TRACE level informations related to security ….then check the “server.log” to find out why the authentication is failing :

=======
        <category name="org.jboss.security">
	   <priority value="TRACE"/>
	</category>
=======










===================



Audit logging for JBoss EAP admin console :


JBoss admin-console is a Seam framework based appication which requires the following steps to enable it's audit logging in "audit.log" :

    (Step1) Edit the "$PROFILE/conf/jboss-log4j.xml" file and then uncomment the following:

       <!-- Security AUDIT Appender -->
       <appender name="AUDIT" class="org.jboss.logging.appender.DailyRollingFileAppender">
          <errorHandler class="org.jboss.logging.util.OnlyOnceErrorHandler"/>
          <param name="File" value="${jboss.server.log.dir}/audit.log"/>
          <param name="Append" value="true"/>
          <param name="DatePattern" value="'.'yyyy-MM-dd"/>
          <layout class="org.apache.log4j.PatternLayout">
             <param name="ConversionPattern" value="%d %-5p [%c] (%t:%x) %m%n"/>
          </layout>
       </appender>

       <!-- Category specifically for Security Audit Provider   -->
       <category name="org.jboss.security.audit.providers.LogAuditProvider" additivity="false">
         <priority value="TRACE"/>
         <appender-ref ref="AUDIT"/>
       </category>

    (Step2) To enable logging for other Web Applications (like jmx-console / web-console or any of your own applications etc.) as well inside the "audit.log" , add the attribute (enableAudit="true") to the following existing Realm inside your "$PROFILE/deploy/jbossweb.sar/server.xml" file.

For an example it would look like:

      <Realm className="org.jboss.web.tomcat.security.JBossWebRealm"
                    certificatePrincipal="org.jboss.security.auth.certs.SubjectDNMapping"
                    allRolesMode="authOnly"   
                    enableAudit="true"
      />  

    (Step3) Besides these, in order to enable the logging of the audit related informations for admin-console and any other application, add the following category inside the "$PROFILE/conf/jboss-log4j.xml" file.

       <category name="org.jboss.seam.security" additivity="false">
         <priority value="TRACE"/>
         <appender-ref ref="AUDIT"/>
       </category>

    (Step4) Restart the JBoss server, login to admin-console and then check the "$PROFILE/log/audit.log" file to see if the login related entries are getting logged or not.

NOTE The public document [1] has mistakenly mentioned an incorrect JAVA_OPTS whose purpose is to get the additional details like cookies/parameters/headers as well in "audit.log" . It reads as:

 JAVA_OPTS="$JAVA_OPTS -Dorg.jboss.security.web.audit=headers,cookies,parameter"

The above JAVA_OPTS is incorrect because it has a missing character 's' in the 'parameters' , so the correct JAVA_OPTS is like the following:

 JAVA_OPTS="$JAVA_OPTS -Dorg.jboss.security.web.audit=headers,cookies,parameters"

===============


[root@userone userone]# mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 6
Server version: 5.1.61 Source distribution

Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| test               |
| testDB             |
+--------------------+
4 rows in set (0.05 sec)

mysql> create database testAuth;
Query OK, 1 row affected (0.00 sec)

mysql> CREATE TABLE PRINCIPLES ( principal_id VARCHAR(64) primary key,password VARCHAR(64));
ERROR 1046 (3D000): No database selected
mysql> 
mysql> 
mysql> 
mysql> use testAuth
Database changed
mysql> CREATE TABLE PRINCIPLES ( principal_id VARCHAR(64) primary key,password VARCHAR(64));
Query OK, 0 rows affected (0.08 sec)

mysql> CREATE TABLE ROLES ( principal_id VARCHAR(64),user_role VARCHAR(64),role_group VARCHAR(64));
Query OK, 0 rows affected (0.08 sec)

mysql> Insert into PRINCIPLES values('TestUserOne','PasswordOne');
Query OK, 1 row affected (0.00 sec)

mysql> Insert into PRINCIPLES values('TestUserTwo','PasswordTwo');
Query OK, 1 row affected (0.00 sec)

mysql> Insert into ROLES values('TestUserOne','TestRoleOne','TestUserOneGroup');
Query OK, 1 row affected (0.00 sec)

mysql> Insert into ROLES values('TestUserTwo','TestRoleTwo','TestUserTwoGroup');
Query OK, 1 row affected (0.00 sec)
